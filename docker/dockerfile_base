# Ubuntu 20.04 Base Image for TurtleBot3 Simulation
# The key is for this base image to handle the "big" installs such as ROS that 
# will change infrequently or not at all, while maintaining a separate 
# overlay image where most development will take place and changes will be frequent.

FROM nvidia/cudagl:11.1.1-base-ubuntu20.04

SHELL ["/bin/bash", "-c"]

# Set up locale and UTF-8 encoding, mostly so setup runs without errors
ARG DEBIAN_FRONTEND=noninteractive
RUN apt-get update && apt-get install -y locales
RUN locale-gen en_US.UTF-8
ENV PYTHONIOENCODING UTF-8
ENV LC_ALL en_US.UTF-8
ENV LANG en_US.UTF-8
ENV LANGUAGE en_US:en
RUN dpkg-reconfigure locales

# Install basic apt packages
RUN apt-get update && apt-get install -y \
  cmake \
  g++ \
  git \
  gnupg gnupg1 gnupg2 \
  locales \
  lsb-release \
  wget

# Install ROS Noetic
RUN sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'
RUN apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654
RUN apt-get update \
 && apt-get install -y --no-install-recommends ros-noetic-desktop-full
RUN apt-get install -y --no-install-recommends \
  python3-catkin-tools \
  python3-pip \
  python3-rosdep
RUN pip3 install osrf-pycommon
RUN rosdep init \
 && rosdep fix-permissions \
 && rosdep update

# Install TurtleBot3 packages
RUN apt-get install -y \
  ros-noetic-turtlebot3 \
  ros-noetic-turtlebot3-msgs
RUN mkdir -p /turtlebot3_ws/src \
 && cd /turtlebot3_ws/src \
 && source /opt/ros/noetic/setup.bash \
 && catkin_init_workspace \
 && git clone https://github.com/ROBOTIS-GIT/turtlebot3_simulations.git

# Build the base Catkin workspace
RUN cd /turtlebot3_ws \
 && source /opt/ros/noetic/setup.bash \
 && catkin build -j4
#RUN echo "source /turtlebot3_ws/devel/setup.bash" >> ~/.bashrc
#RUN echo "export TURTLEBOT3_MODEL=waffle_pi" >> ~/.bashrc

# Set up the work directory and entrypoint
WORKDIR /turtlebot3_ws
COPY ./docker/entrypoint.sh /
ENTRYPOINT [ "/entrypoint.sh" ]