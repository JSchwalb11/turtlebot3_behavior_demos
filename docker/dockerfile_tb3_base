# Base Image for TurtleBot3 Simulation
FROM nvidia_ros:latest
SHELL ["/bin/bash", "-c"]

# Install basic apt packages
RUN apt-get update && apt-get install -y \
 git python3-pip

# Install additional Python modules
RUN pip3 install transforms3d

# Install additional ROS packages
RUN apt-get install -y \
  ros-foxy-gazebo-* \
  ros-foxy-cartographer \
  ros-foxy-cartographer-ros \
  ros-foxy-navigation2 \
  ros-foxy-nav2-bringup \
  ros-foxy-py-trees \
  ros-foxy-py-trees-ros \
  ros-foxy-py-trees-ros-viewer

# Create Colcon workspace with TurtleBot3 packages
RUN mkdir -p /turtlebot3_ws/src \
 && cd /turtlebot3_ws/src \
 && git clone -b foxy-devel https://github.com/ROBOTIS-GIT/turtlebot3.git \
 && git clone -b foxy-devel https://github.com/ROBOTIS-GIT/turtlebot3_msgs.git \
 && git clone -b foxy-devel https://github.com/ROBOTIS-GIT/turtlebot3_simulations.git \
 && git clone -b foxy-devel https://github.com/ROBOTIS-GIT/DynamixelSDK.git

# Install Groot for visualizing behavior trees
RUN apt-get install -y qt5-default libqt5x11extras5-dev libqt5help5 qttools5-dev qtxmlpatterns5-dev-tools libqt5svg5-dev
RUN cd /turtlebot3_ws/src \
 && git clone -b master https://github.com/BehaviorTree/Groot.git groot \
 && cd groot \
 && git submodule update --init --recursive

# Build the base Colcon workspace
RUN cd /turtlebot3_ws \
 && source /opt/ros/foxy/setup.bash \
 && colcon build --symlink-install

# Remove display warnings
RUN mkdir /tmp/runtime-root
ENV XDG_RUNTIME_DIR "/tmp/runtime-root"
ENV NO_AT_BRIDGE 1

# Set up the work directory and entrypoint
WORKDIR /turtlebot3_ws
COPY ./docker/entrypoint.sh /
ENTRYPOINT [ "/entrypoint.sh" ]
